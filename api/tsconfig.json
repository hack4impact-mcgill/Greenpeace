{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Language and Environment */
    "target": "ES2022" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": [
      "ES2022"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "moduleDetection": "auto" /* Control what method is used to detect module-format JS files. */,

    /* Modules */
    "module": "NodeNext" /* Specify what module code is generated. */,
    "rootDir": "./src/" /* Specify the root folder within your source files. */,
    "moduleResolution": "nodenext" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "./src/" /* Specify the base directory to resolve non-relative module names. */,
    "paths": {} /* Specify a set of entries that re-map imports to additional lookup locations. */,

    /* JavaScript Support */
    "allowJs": false /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

    /* Emit */
    "outDir": "./build/" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Disable emitting comments. */,
    "sourceRoot": "./src/" /* Specify the root path for debuggers to find the reference source code. */,
    "sourceMap": true,
    "preserveConstEnums": true /* Disable erasing 'const enum' declarations in generated code. */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "ts-node": {
    "swc": false
  }
}
